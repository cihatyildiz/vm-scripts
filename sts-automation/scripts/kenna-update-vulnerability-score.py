import sys, os, requests, json, time
from requests.auth import HTTPBasicAuth
from datetime import datetime

import requests.packages.urllib3
requests.packages.urllib3.disable_warnings()

from lib.jira import *
from lib.kenna import *
from lib.sts import *

config_file = "data/vuln_scores.json"
kenna_token = os.environ['KENNA_TOKEN'].replace('"', "")

if __name__ == "__main__":

    total_vuln_count = 0
    with open(config_file) as config_data:
        config_json = json.load(config_data)
        
        for v in config_json["asset_groups"]:
            vuln_ids = getVulnerabilityIdsByRiskMeter(kenna_token, v["id"])
            print(vuln_ids)
            vuln_overside_score = v["vulns_score"]
            print(vuln_overside_score)
            results = bulkVulnerabilityScoreUpdate(kenna_token, vuln_ids, vuln_overside_score)
            print(results)
            total_vuln_count += len(vuln_ids)

        print("{} Vulnerabilities has been updated..".format(total_vuln_count)) 
    #TODO:Send email for the report
